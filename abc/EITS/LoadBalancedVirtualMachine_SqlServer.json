{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "Project Name"
      }
    },
    "registrationKey": {
      "type": "string",
      "metadata": {
        "description": "Automation account Registeration Key for DSC"
      }
    },
    "registrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Automation Account Registeration Url for DSC"
      }
    },
    "nodeConfigurationName": {
      "type": "string",
      "metadata": {
        "description": "DSC Configuration File name for DSC"
      }
    },
    "timestamp": {
      "type": "string",
      "metadata": {
        "description": "timestamp for DSC"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "SQLDEV",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "SQL2017-WS2016",
        "SQLDEV"
      ],
      "metadata": {
        "description": "The Windows version for the VM"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size of the virtual machine, must be available in the virtual machine's location"
      }
    },
    "numberOfInstances": {
      "type": "int",
      "minValue": 1,
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VM instances to be created behind internal load balancer control"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group the virtual network exists in"
      }
    },
    "virtualNetworkSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name to allocate resources to"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network name to allocate resources to"
      }
    },
    "workspaceId": {
      "type": "string",
      "metadata": {
        "description": "OMS workspace Id"
      }
    },
    "workspaceKey": {
      "type": "string",
      "metadata": {
        "description": "OMS Workspace Key"
      }
    }
  },
  "variables": {
    "vmNamePrefix": "[concat(parameters('projectName'), 'VM')]",
    "imagePublisher": "MicrosoftSQLServer",
    "imageOffer": "SQL2017-WS2016",
    "availabilitySetName": "[concat(parameters('projectName'), 'AVSet')]",
    "vhdStorageType": "Standard_LRS",
    "vhdStorageAccountName": "[concat('vhdstorage', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",

    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('virtualNetworkSubnetName'))]",
    "networkInterfaceNamePrefix": "[concat(parameters('projectName'), 'NIC')]",
    "loadBalancerName": "[concat(parameters('projectName'), 'lb')]",
    // "loadBalancerIP": "[concat(varibles('loadBalancerName'), 'IP')]",
    "loadBalancerIP": "[concat(parameters('projectName'), 'IP')]",
    "lbId": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
    "diagnosticsStorageAccountName": "[variables('vhdStorageAccountName')]",
    "modulesUrl": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
    "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
    "configurationMode": "ApplyAndMonitor",
    "configurationModeFrequencyMins": "15",
    "refreshFrequencyMins": "30",
    "rebootNodeIfNeeded": 1,
    "actionAfterReboot": "ContinueConfiguration",
    "allowModuleOverwrite": 1,
    "nsgName": "[concat( parameters('virtualNetworkSubnetName'), 'NSG')]"
  },
  "resources": [
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vhdStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "sku": {
        "name": "[variables('vhdStorageType')]"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AvailabilitySet"
      },
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NSG "
      },
      "properties": {
        "securityRules": [
          {
            "name": "rdp-rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }

        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('networkInterfaceNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbId'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('loadBalancerIP')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "static"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "LoadBalancer"
      },
      "dependsOn": [
       // "[variables('vnetId')]",
        "[concat(resourceId('Microsoft.Network/publicIPAddresses/', variables('loadBalancerIP')))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
          /*    "subnet": {
                "id": "[variables('subnetRef')]"
              },
              */
              "publicIPAddress": {
               
                "id": "[concat(resourceId('Microsoft.Network/publicIPAddresses/', variables('loadBalancerIP')))]"
              },
              "publicIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePrefix'), copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachines"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('vhdStorageAccountName'))]",
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('vhdStorageAccountName')), '2016-01-01').primaryEndpoints.blob, 'vhds/osdisk', copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceNamePrefix'), copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('vhdStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "apiVersion": "2016-03-30",
          "location": "[resourceGroup().location]",
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmNamePrefix'), copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "WadCfg": {
                "DiagnosticMonitorConfiguration": {
                  "overallQuotaInMB": "4096",
                  "DiagnosticInfrastructureLogs": {
                    "scheduledTransferLogLevelFilter": "Error"
                  },
                  "WindowsEventLog": {
                    "scheduledTransferPeriod": "PT1M",
                    "DataSource": [
                      {
                        "name": "Application!*[System[(Level = 1) or (Level = 2)]]"
                      },
                      {
                        "name": "Security!*[System[(Level = 1 or Level = 2)]]"
                      },
                      {
                        "name": "System!*[System[(Level = 1 or Level = 2)]]"
                      }
                    ]
                  },
                  "PerformanceCounters": {
                    "scheduledTransferPeriod": "PT1M",
                    "PerformanceCounterConfiguration": [
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% Processor Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU utilization",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% Privileged Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU privileged time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor(_Total)\\% User Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "CPU user time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "CPU frequency",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\System\\Processes",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Processes",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Process(_Total)\\Thread Count",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Threads",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Process(_Total)\\Handle Count",
                        "sampleRate": "PT15S",
                        "unit": "Count",
                        "annotation": [
                          {
                            "displayName": "Handles",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\% Committed Bytes In Use",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Memory usage",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Available Bytes",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory available",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Committed Bytes",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory committed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\Memory\\Commit Limit",
                        "sampleRate": "PT15S",
                        "unit": "Bytes",
                        "annotation": [
                          {
                            "displayName": "Memory commit limit",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Read Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active read time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\% Disk Write Time",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk active write time",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Transfers/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Reads/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk read operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Writes/sec",
                        "sampleRate": "PT15S",
                        "unit": "CountPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk write operations",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Read Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk read speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\PhysicalDisk(_Total)\\Disk Write Bytes/sec",
                        "sampleRate": "PT15S",
                        "unit": "BytesPerSecond",
                        "annotation": [
                          {
                            "displayName": "Disk write speed",
                            "locale": "en-us"
                          }
                        ]
                      },
                      {
                        "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                        "sampleRate": "PT15S",
                        "unit": "Percent",
                        "annotation": [
                          {
                            "displayName": "Disk free space (percentage)",
                            "locale": "en-us"
                          }
                        ]
                      }
                    ]
                  },
                  "Metrics": {
                    "resourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmNamePrefix'), copyindex()))]",
                    "MetricAggregation": [
                      {
                        "scheduledTransferPeriod": "PT1H"
                      },
                      {
                        "scheduledTransferPeriod": "PT1M"
                      }
                    ]
                  }
                }
              }
            },
            "protectedSettings": {
              "storageAccountName": "[variables('diagnosticsStorageAccountName')]",
              "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticsStorageAccountName')), '2016-01-01').keys[0].value]"
            }
          }
        },
        //---------OMS Extension------------
        {
          "type": "extensions",
          "name": "OMSExtension",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmNamePrefix'), copyindex()))]"
          ],
          "properties": {
            "publisher": "Microsoft.EnterpriseCloud.Monitoring",
            "type": "MicrosoftMonitoringAgent",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "workspaceId": "[parameters('workspaceId')]"
            },
            "protectedSettings": {
              "workspaceKey": "[parameters('workspaceKey')]"
            }
          }
        }
        //-------DSC Extension--------------
        //,
        //{
        //  "type": "Microsoft.Compute/virtualMachines/extensions",
        //  "name": "[concat(variables('vmNamePrefix'),copyindex(),'/Microsoft.Powershell.DSC')]",
        //  "apiVersion": "2015-06-15",
        //  "location": "[resourceGroup().location]",
        //  "dependsOn": [
        //    "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmNamePrefix'), copyindex()))]"
        //  ],
        //  "properties": {
        //    "publisher": "Microsoft.Powershell",
        //    "type": "DSC",
        //    "typeHandlerVersion": "2.19",
        //    "autoUpgradeMinorVersion": true,
        //    "protectedSettings": {
        //      "Items": {
        //        "registrationKeyPrivate": "[parameters('registrationKey')]"
        //      }
        //    },
        //    "settings": {
        //      "modulesUrl": "[variables('modulesUrl')]",
        //      "SasToken": "",
        //      "configurationFunction": "[variables('configurationFunction')]",
        //      "Properties": [
        //        {
        //          "Name": "RegistrationKey",
        //          "Value": {
        //            "UserName": "PLACEHOLDER_DONOTUSE",
        //            "Password": "PrivateSettingsRef:registrationKeyPrivate"
        //          },
        //          "TypeName": "System.Management.Automation.PSCredential"
        //        },
        //        {
        //          "Name": "RegistrationUrl",
        //          "Value": "[parameters('registrationUrl')]",
        //          "TypeName": "System.String"
        //        },
        //        {
        //          "Name": "NodeConfigurationName",
        //          "Value": "[parameters('nodeConfigurationName')]",
        //          "TypeName": "System.String"
        //        },
        //        {
        //          "Name": "ConfigurationMode",
        //          "Value": "[variables('configurationMode')]",
        //          "TypeName": "System.String"
        //        },
        //        {
        //          "Name": "ConfigurationModeFrequencyMins",
        //          "Value": "[variables('configurationModeFrequencyMins')]",
        //          "TypeName": "System.Int32"
        //        },
        //        {
        //          "Name": "RefreshFrequencyMins",
        //          "Value": "[variables('refreshFrequencyMins')]",
        //          "TypeName": "System.Int32"
        //        },
        //        {
        //          "Name": "RebootNodeIfNeeded",
        //          "Value": "[variables('rebootNodeIfNeeded')]",
        //          "TypeName": "System.Boolean"
        //        },
        //        {
        //          "Name": "ActionAfterReboot",
        //          "Value": "[variables('actionAfterReboot')]",
        //          "TypeName": "System.String"
        //        },
        //        {
        //          "Name": "AllowModuleOverwrite",
        //          "Value": "[variables('allowModuleOverwrite')]",
        //          "TypeName": "System.Boolean"
        //        },
        //        {
        //          "Name": "Timestamp",
        //          "Value": "[parameters('timestamp')]",
        //          "TypeName": "System.String"
        //        }
        //      ]
        //    }
        //  }
        //}
      ]
    }

  ]
}
